{% include 'header' %}

import TableKit
import TableKitLibrary
import UIKit
import UIKitLibrary

class {{ module_info.name }}ViewController: BaseTableViewController<{{ module_info.name }}ViewModel> {
    
    // MARK: - Constants
    
    private enum Constants {
        
        
        
    }
    
    private enum Mocks {
        
        
        
    }
    
    // MARK: - Views

    

    // MARK: - Properties
    
    private lazy var tableDirector = TableDirector(tableView: tableView)

    

    // MARK: - Computed Properties



    // MARK: - Life Cycle
    
    override func viewDidLoad() {
        super.viewDidLoad()

        bind()
        localize()

        configureTableView()
    }

    // MARK: - Table
    
    override func configureTableView() {
        tableDirector.replace(with: [
            section
        ])
    }
    
    // MARK: - Appearance
    
    override func configureAppearance() {
        super.configureAppearance()
        
        
    }
    
    // MARK: - Overrides

    

}

// MARK: - Binding

private extension {{ module_info.name }}ViewController {

    func bind() {
        bindViewModel()
        bindBarButtons()
        bindViews()
    }

    func bindViewModel() {
        
    }

    func bindBarButtons() {
        
    }

    func bindViews() {
        
    }

}

// MARK: - Table

private extension {{ module_info.name }}ViewController {
    
    // MARK: - Sections
    
    var section: TableSection {
        return TableSection(onlyRows: [
            
        ])
    }
    
    // MARK: - Rows
    
    
    
}

// MARK: - Actions

private extension {{ module_info.name }}ViewController {

    

}

// MARK: - Constraints

private extension {{ module_info.name }}ViewController {

    

}

// MARK: - Private

private extension {{ module_info.name }}ViewController {

    func localize() {
        
    }

}

// MARK: - Preview

#if DEBUG

import SwiftUI

struct {{ module_info.name }}ViewController_Previews: PreviewProvider {

    static var previews: some View {
        {{ module_info.name }}ViewController(viewModel: .init())
            .preview
            .edgesIgnoringSafeArea(.all)
    }

}

#endif
